4CAM_DEBUG_TOOL v1.1.0 使用說明
=====================================

【工具簡介】
4攝影機 DUT SSH 控制工具，提供圖形化介面進行 SSH 指令控制和檔案傳輸。

【主要功能】
1. SSH 指令執行 - 從 Command.txt 載入預設指令或手動輸入
2. 檔案傳輸 - 從 DUT 下載檔案到本機 PC
3. 連線管理 - 支援 DUT IP、使用者名稱、密碼設定和連線測試
4. Handover 功能 - 自動執行一系列預設檢查指令
5. 設定記憶 - 自動儲存所有設定，重啟後恢復上次狀態
6. 視窗調整 - 支援拖拉調整大小和最大化

【檔案結構】
- 4CAM_DEBUG_TOOL_v1.1.exe - 主程式執行檔 (12.4MB)
- REF/Command.txt - 指令表檔案
- settings.json - 自動生成的設定檔案
- 使用說明.txt - 本說明檔案

【使用步驟】
1. 啟動 4CAM_DEBUG_TOOL_v1.1.exe
2. 設定連線資訊：
   - DUT IP (預設: 192.168.11.143)
   - PC IP (預設: 192.168.11.142)
   - Username (預設: root)
   - Password (請輸入 DUT 密碼)
3. 點擊「測試連線」確認 SSH 連線
4. 選擇指令並執行，或手動輸入指令
5. 使用檔案傳輸功能下載 DUT 檔案
6. 使用 Handover 功能執行完整檢查流程

【新增功能 v1.1.0】
- ✅ 視窗可拖拉調整大小和最大化
- ✅ 所有設定自動記憶 (IP、帳密、檔案路徑、視窗大小等)
- ✅ 支援密碼認證 (密碼輸入框隱藏顯示)
- ✅ Handover 功能 - 自動執行完整檢查流程
- ✅ 改善 SSH 連線錯誤處理

【指令表格式】
Command.txt 格式：指令名稱 = 完整指令
範例：
sn_dev = diag -g sn dev
ls_root = ls /

【Handover 功能】
自動執行以下檢查指令序列：
1. 設備序列號檢查
2. 主機板序列號檢查
3. 型號檢查
4. 韌體版本檢查
5. 溫度感測器檢查 (4個)
6. 檔案系統檢查
7. 磁碟空間檢查

【檔案傳輸】
- 來源：DUT 檔案路徑 (支援萬用字元，如 *.jpg)
- 目標：PC 本機資料夾路徑
- 支援自動建立目標目錄

【注意事項】
- 需要 DUT 支援 SSH 連線
- 首次使用請設定正確的密碼
- 建議先測試基本連線再執行其他操作
- 所有設定會自動儲存，下次啟動時恢復

【版本資訊】
版本：1.1.0
建立日期：2025/01/27
檔案大小：12.4MB
支援系統：Windows 10/11

【技術規格】
- 開發語言：Python 3.10
- GUI 框架：Tkinter
- SSH 庫：Paramiko
- 打包工具：PyInstaller
- 設定儲存：JSON 格式

【更新日誌】
v1.1.0 (2025/01/27)
- 新增視窗拖拉調整功能
- 新增設定檔案自動儲存/載入
- 新增密碼認證支援
- 新增 Handover 自動檢查功能
- 改善 SSH 連線穩定性
